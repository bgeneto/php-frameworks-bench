worker_processes 4;

events
{
    worker_connections 1024;
}

http
{
    include mime.types;
    default_type application/octet-stream;

    sendfile on;
    aio on;
    tcp_nopush on;
    directio 8m;

    #access_log syslog:server=unix:/dev/log;
    access_log off;

    include /etc/nginx-mainline/conf.d/*.conf;

    ##
    # `gzip` Settings
    ##
    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server
    {
        server_name plainphp.bench;
        root /var/www/html/plainphp/public;

        location /
        {
            # try to serve file directly, fallback to index.php
            try_files $uri /index.php$is_args$args;
        }

        location ~ ^/index\.php(/|$)
        {
            # when using PHP-FPM as a unix socket
            #fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;

            # when PHP-FPM is configured to use TCP
            fastcgi_pass php-fpm:9000;

            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;

            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            internal;
        }

        # return 404 for all other php files not matching the front controller
        # this prevents access to other php files you don't want to be accessible.
        location ~ \.php$
        {
            return 404;
        }
    }

    server
    {
        server_name laravel.bench;
        root /var/www/html/laravel/public;

        index index.php;

        charset utf-8;

        location / {
            try_files $uri $uri/ /index.php?$is_args$args;
        }

        error_page 404 /index.php;

        location ~ \.php$ {
            fastcgi_pass php-fpm:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            include fastcgi_params;
        }

        location ~ /\.(?!well-known).* {
            deny all;
        }
    }

    server
    {
        server_name octane.bench;
        root /var/www/html/octane/public;

        index index.php;

        charset utf-8;

        location /index.php {
            try_files /not_exists @octane;
        }

        location / {
            try_files $uri $uri/ @octane;
        }

        error_page 404 /index.php;

        resolver 127.0.0.11 valid=600s;

        location @octane {
            set $suffix "";

            if ($uri = /index.php) {
                set $suffix ?$query_string;
            }

            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header Scheme $scheme;
            proxy_set_header SERVER_PORT $server_port;
            proxy_set_header REMOTE_ADDR $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_pass http://php-fpm:8000$suffix;
        }
    }

    server
    {
        server_name codeigniter3.bench;
        root /var/www/html/codeigniter3;

        location /
        {
            # try to serve file directly, fallback to index.php
            try_files $uri /index.php$is_args$args;
        }

        location ~ ^/index\.php(/|$)
        {
            # when using PHP-FPM as a unix socket
            #fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;

            # when PHP-FPM is configured to use TCP
            fastcgi_pass php-fpm:9000;

            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;

            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            internal;
        }

        # return 404 for all other php files not matching the front controller
        # this prevents access to other php files you don't want to be accessible.
        location ~ \.php$
        {
            return 404;
        }
    }

    server
    {
        server_name codeigniter.bench;
        root /var/www/html/codeigniter/public;

        location /
        {
            # try to serve file directly, fallback to index.php
            try_files $uri /index.php$is_args$args;
        }

        location ~ ^/index\.php(/|$)
        {
            # when using PHP-FPM as a unix socket
            #fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;

            # when PHP-FPM is configured to use TCP
            fastcgi_pass php-fpm:9000;

            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;

            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            internal;
        }

        # return 404 for all other php files not matching the front controller
        # this prevents access to other php files you don't want to be accessible.
        location ~ \.php$
        {
            return 404;
        }
    }

    server
    {
        server_name symfony.bench;
        root /var/www/html/symfony/public;

        location /
        {
            # try to serve file directly, fallback to index.php
            try_files $uri /index.php$is_args$args;
        }

        location /bundles {
             try_files $uri =404;
        }

        location ~ ^/index\.php(/|$)
        {
            # when PHP-FPM is configured to use TCP
            fastcgi_pass php-fpm:9000;

            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;

            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            internal;
        }

        location ~ \.php$
        {
            return 404;
        }
    }
}
