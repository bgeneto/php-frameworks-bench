worker_processes 4;

events
{
    worker_connections 1024;
}

http
{
    include mime.types;
    default_type application/octet-stream;

    sendfile on;
    aio on;
    tcp_nopush on;
    directio 8m;

    access_log syslog:server=unix:/dev/log;

    include /etc/nginx-mainline/conf.d/*.conf;

    ##
    # `gzip` Settings
    ##
    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    server
    {
        server_name plainphp.localhost;
        root /var/www/html/plainphp/public;

        location /
        {
            # try to serve file directly, fallback to index.php
            try_files $uri /index.php$is_args$args;
        }

        location ~ ^/index\.php(/|$)
        {
            # when using PHP-FPM as a unix socket
            #fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;

            # when PHP-FPM is configured to use TCP
            fastcgi_pass php-fpm:9000;

            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;

            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            internal;
        }

        # return 404 for all other php files not matching the front controller
        # this prevents access to other php files you don't want to be accessible.
        location ~ \.php$
        {
            return 404;
        }

        error_log /var/log/nginx/plainphp.error.log;
        access_log /var/log/nginx/plainphp.access.log;
    }

    server
    {
        server_name laravel.localhost;
        root /var/www/html/laravel/public;

        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";

        index index.php;

        charset utf-8;

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        location = /favicon.ico { access_log off; log_not_found off; }
        location = /robots.txt  { access_log off; log_not_found off; }

        error_page 404 /index.php;

        location ~ \.php$ {
            fastcgi_pass php-fpm:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            include fastcgi_params;
        }

        location ~ /\.(?!well-known).* {
            deny all;
        }
        
        error_log /var/log/nginx/laravel.error.log;
        access_log /var/log/nginx/laravel.access.log;
    }

    server
    {
        server_name codeigniter.localhost;
        root /var/www/html/codeigniter/public;

        location /
        {
            # try to serve file directly, fallback to index.php
            try_files $uri /index.php$is_args$args;
        }

        location ~ ^/index\.php(/|$)
        {
            # when using PHP-FPM as a unix socket
            #fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;

            # when PHP-FPM is configured to use TCP
            fastcgi_pass php-fpm:9000;

            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;

            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            internal;
        }

        # return 404 for all other php files not matching the front controller
        # this prevents access to other php files you don't want to be accessible.
        location ~ \.php$
        {
            return 404;
        }

        error_log /var/log/nginx/codeigniter.error.log;
        access_log /var/log/nginx/codeigniter.access.log;
    }

    server
    {
        server_name symfony.localhost;
        root /var/www/html/symfony/public;

        location /
        {
            # try to serve file directly, fallback to index.php
            try_files $uri /index.php$is_args$args;
        }

        location /bundles {
             try_files $uri =404;
        }

        location ~ ^/index\.php(/|$)
        {
            # when using PHP-FPM as a unix socket
            #fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;

            # when PHP-FPM is configured to use TCP
            fastcgi_pass php-fpm:9000;

            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;

            # optionally set the value of the environment variables used in the application
            # fastcgi_param APP_ENV prod;
            # fastcgi_param APP_SECRET <app-secret-id>;
            # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

            # When you are using symlinks to link the document root to the
            # current version of your application, you should pass the real
            # application path instead of the path to the symlink to PHP
            # FPM.
            # Otherwise, PHP's OPcache may not properly detect changes to
            # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
            # for more information).
            # Caveat: When PHP-FPM is hosted on a different machine from nginx
            #         $realpath_root may not resolve as you expect! In this case try using
            #         $document_root instead.
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            # Prevents URIs that include the front controller. This will 404:
            # http://example.com/index.php/some-path
            # Remove the internal directive to allow URIs like this
            internal;
        }

        # return 404 for all other php files not matching the front controller
        # this prevents access to other php files you don't want to be accessible.
        location ~ \.php$
        {
            return 404;
        }

        error_log /var/log/nginx/symfony.error.log;
        access_log /var/log/nginx/symfony.access.log;
    }
}
